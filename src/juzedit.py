from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon 
from PyQt5.QtCore import Qt
import json
import os


# Checks if .json file can be loaded with the dictionary, if not create a new one 
# and initialize all key-value pairs to 'Juz #' - 0
if os.path.exists('data.json'):
    # If it does, load the existing data
    with open('data.json', 'r') as f:
        juzNumber_dictionary = json.load(f)
else:
    juzNumber_dictionary = {}
    for juz in range(1,31):
        juzNumber_dictionary[f"Juz {juz}"] = 0
    with open('data.json', 'w') as f:
        json.dump(juzNumber_dictionary, f)


class Ui_juzEditWindow(object):
    def setupUi(self, juzEditWindow):

    # QT Designer GUI Template
        juzEditWindow.setObjectName("juzEditWindow")
        juzEditWindow.resize(598, 555)
        font = QtGui.QFont()
        font.setPointSize(10)
        juzEditWindow.setFont(font)
        juzEditWindow.setSizeGripEnabled(False)
        juzEditWindow.setModal(False)
        self.verticalLayoutWidget = QtWidgets.QWidget(juzEditWindow)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(40, 30, 281, 471))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.listWidget = QtWidgets.QListWidget(self.verticalLayoutWidget)
        self.listWidget.setObjectName("listWidget")
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        self.verticalLayout.addWidget(self.listWidget)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(juzEditWindow)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(370, 210, 160, 107))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.perfectRadio = QtWidgets.QRadioButton(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.perfectRadio.setFont(font)
        self.perfectRadio.setObjectName("perfectRadio")
        self.verticalLayout_2.addWidget(self.perfectRadio)
        self.goodRadio = QtWidgets.QRadioButton(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.goodRadio.setFont(font)
        self.goodRadio.setObjectName("goodRadio")
        self.verticalLayout_2.addWidget(self.goodRadio)
        self.okayRadio = QtWidgets.QRadioButton(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.okayRadio.setFont(font)
        self.okayRadio.setObjectName("okayRadio")
        self.verticalLayout_2.addWidget(self.okayRadio)
        self.notAvailableRadio = QtWidgets.QRadioButton(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.notAvailableRadio.setFont(font)
        self.notAvailableRadio.setObjectName("notAvailableRadio")
        self.verticalLayout_2.addWidget(self.notAvailableRadio)
        self.buttonBox = QtWidgets.QDialogButtonBox(juzEditWindow)
        self.buttonBox.setGeometry(QtCore.QRect(370, 480, 156, 23))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.buttonBox.setFont(font)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setCenterButtons(False)
        self.buttonBox.setObjectName("buttonBox")
        self.actiontest = QtWidgets.QAction(juzEditWindow)
        self.actiontest.setObjectName("actiontest")

        # Runs ratingSelected function when buttons are clicked
        self.perfectRadio.clicked.connect(self.ratingSelected)
        self.goodRadio.clicked.connect(self.ratingSelected)
        self.okayRadio.clicked.connect(self.ratingSelected)
        self.notAvailableRadio.clicked.connect(self.ratingSelected)

        self.retranslateUi(juzEditWindow)
        self.buttonBox.accepted.connect(juzEditWindow.accept) # type: ignore
        self.buttonBox.rejected.connect(juzEditWindow.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(juzEditWindow)

        # Added the icon and top right window min, max, and close
        icon = QIcon('C:/Users/noobd/OneDrive/Documents/GitHub/QuranReviser/src/quranIcon2.png')
        juzEditWindow.setWindowIcon(icon) # icon top left
        juzEditWindow.setWindowTitle('QuranRevisor') # name of the window
        juzEditWindow.setWindowFlags(Qt.Window | Qt.WindowMinimizeButtonHint | Qt.WindowCloseButtonHint)

        # QT Designer GUI Template - juz names and labels
    def retranslateUi(self, juzEditWindow):
        _translate = QtCore.QCoreApplication.translate
        juzEditWindow.setWindowTitle(_translate("juzEditWindow", "Dialog"))
        self.label.setText(_translate("juzEditWindow", "Juz Editor"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)
        item = self.listWidget.item(0)
        item.setText(_translate("juzEditWindow", "Juz 1"))
        item = self.listWidget.item(1)
        item.setText(_translate("juzEditWindow", "Juz 2"))
        item = self.listWidget.item(2)
        item.setText(_translate("juzEditWindow", "Juz 3"))
        item = self.listWidget.item(3)
        item.setText(_translate("juzEditWindow", "Juz 4"))
        item = self.listWidget.item(4)
        item.setText(_translate("juzEditWindow", "Juz 5"))
        item = self.listWidget.item(5)
        item.setText(_translate("juzEditWindow", "Juz 6"))
        item = self.listWidget.item(6)
        item.setText(_translate("juzEditWindow", "Juz 7"))
        item = self.listWidget.item(7)
        item.setText(_translate("juzEditWindow", "Juz 8"))
        item = self.listWidget.item(8)
        item.setText(_translate("juzEditWindow", "Juz 9"))
        item = self.listWidget.item(9)
        item.setText(_translate("juzEditWindow", "Juz 10"))
        item = self.listWidget.item(10)
        item.setText(_translate("juzEditWindow", "Juz 11"))
        item = self.listWidget.item(11)
        item.setText(_translate("juzEditWindow", "Juz 12"))
        item = self.listWidget.item(12)
        item.setText(_translate("juzEditWindow", "Juz 13"))
        item = self.listWidget.item(13)
        item.setText(_translate("juzEditWindow", "Juz 14"))
        item = self.listWidget.item(14)
        item.setText(_translate("juzEditWindow", "Juz 15"))
        item = self.listWidget.item(15)
        item.setText(_translate("juzEditWindow", "Juz 16"))
        item = self.listWidget.item(16)
        item.setText(_translate("juzEditWindow", "Juz 17"))
        item = self.listWidget.item(17)
        item.setText(_translate("juzEditWindow", "Juz 18"))
        item = self.listWidget.item(18)
        item.setText(_translate("juzEditWindow", "Juz 19"))
        item = self.listWidget.item(19)
        item.setText(_translate("juzEditWindow", "Juz 20"))
        item = self.listWidget.item(20)
        item.setText(_translate("juzEditWindow", "Juz 21"))
        item = self.listWidget.item(21)
        item.setText(_translate("juzEditWindow", "Juz 22"))
        item = self.listWidget.item(22)
        item.setText(_translate("juzEditWindow", "Juz 23"))
        item = self.listWidget.item(23)
        item.setText(_translate("juzEditWindow", "Juz 24"))
        item = self.listWidget.item(24)
        item.setText(_translate("juzEditWindow", "Juz 25"))
        item = self.listWidget.item(25)
        item.setText(_translate("juzEditWindow", "Juz 26"))
        item = self.listWidget.item(26)
        item.setText(_translate("juzEditWindow", "Juz 27"))
        item = self.listWidget.item(27)
        item.setText(_translate("juzEditWindow", "Juz 28"))
        item = self.listWidget.item(28)
        item.setText(_translate("juzEditWindow", "Juz 29"))
        item = self.listWidget.item(29)
        item.setText(_translate("juzEditWindow", "Juz 30"))
        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.label_2.setText(_translate("juzEditWindow", "Reviews :"))
        self.perfectRadio.setText(_translate("juzEditWindow", "Perfect"))
        self.goodRadio.setText(_translate("juzEditWindow", "Good"))
        self.okayRadio.setText(_translate("juzEditWindow", "Okay"))
        self.notAvailableRadio.setText(_translate("juzEditWindow", "N/A"))
        self.actiontest.setText(_translate("juzEditWindow", "test"))

    # Function takes in user's selected item on the list
    # Assigns a rating / review to the Juz that the user selected, value is stored in dictionary and printed in terminal
    def ratingSelected(self):
        selected_item = self.listWidget.currentItem()
        if self.perfectRadio.isChecked():
            juz_num = int(selected_item.text().split()[-1])
            juzNumber_dictionary[f'Juz {juz_num}'] = 100
        elif self.goodRadio.isChecked():
            juz_num = int(selected_item.text().split()[-1])
            juzNumber_dictionary[f'Juz {juz_num}'] = 75
        elif self.okayRadio.isChecked():
            juz_num = int(selected_item.text().split()[-1])
            juzNumber_dictionary[f'Juz {juz_num}'] = 50
        elif self.notAvailableRadio.isChecked():
            juz_num = int(selected_item.text().split()[-1])
            juzNumber_dictionary[f'Juz {juz_num}'] = 0
        with open('data.json', 'w') as f:
            json.dump(juzNumber_dictionary, f)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    juzEditWindow = QtWidgets.QDialog()
    ui = Ui_juzEditWindow()
    ui.setupUi(juzEditWindow)
    juzEditWindow.show()
    sys.exit(app.exec_())
